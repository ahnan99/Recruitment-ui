[{"F:\\project\\Recruitment-ui\\src\\modules\\store\\index.js":"1","F:\\project\\Recruitment-ui\\src\\modules\\sagas.js":"2","F:\\project\\Recruitment-ui\\src\\routes\\index.js":"3","F:\\project\\Recruitment-ui\\src\\components\\JobCollapse\\JobCollapse.jsx":"4","F:\\project\\Recruitment-ui\\src\\containers\\JobDetail\\JobDetail.jsx":"5","F:\\project\\Recruitment-ui\\src\\containers\\HomePage\\HomePage.jsx":"6","F:\\project\\Recruitment-ui\\src\\modules\\index.js":"7","F:\\project\\Recruitment-ui\\src\\modules\\jobs\\index.js":"8","F:\\project\\Recruitment-ui\\src\\modules\\jobs\\sagas.js":"9","F:\\project\\Recruitment-ui\\src\\containers\\App.js":"10","F:\\project\\Recruitment-ui\\src\\containers\\MainView.jsx":"11","F:\\project\\Recruitment-ui\\src\\components\\LoginForm\\LoginForm.jsx":"12","F:\\project\\Recruitment-ui\\src\\containers\\LoginPage\\LoginPage.jsx":"13","F:\\project\\Recruitment-ui\\src\\modules\\function\\checkID.js":"14","F:\\project\\Recruitment-ui\\src\\components\\RegisterForm\\RegisterForm.jsx":"15","F:\\project\\Recruitment-ui\\src\\containers\\Register\\Register.jsx":"16","F:\\project\\Recruitment-ui\\src\\modules\\application\\index.js":"17","F:\\project\\Recruitment-ui\\src\\modules\\application\\sagas.js":"18","F:\\project\\Recruitment-ui\\src\\components\\Resume\\ResumeForm.jsx":"19","F:\\project\\Recruitment-ui\\src\\containers\\ResumePage\\ResumePage.jsx":"20","F:\\project\\Recruitment-ui\\src\\modules\\resume\\sagas.js":"21","F:\\project\\Recruitment-ui\\src\\components\\Resume\\ResumeDetailList.jsx":"22","F:\\project\\Recruitment-ui\\src\\components\\Resume\\SkillModal.jsx":"23","F:\\project\\Recruitment-ui\\src\\components\\Resume\\EducationModal.jsx":"24","F:\\project\\Recruitment-ui\\src\\components\\Resume\\JobModal.jsx":"25","F:\\project\\Recruitment-ui\\src\\modules\\resume\\index.js":"26","F:\\project\\Recruitment-ui\\src\\index.js":"27","F:\\project\\Recruitment-ui\\src\\modules\\account\\index.js":"28","F:\\project\\Recruitment-ui\\src\\containers\\AccountPage\\AccountPage.jsx":"29","F:\\project\\Recruitment-ui\\src\\modules\\account\\sagas.js":"30","F:\\project\\Recruitment-ui\\src\\components\\Resume\\AccountInfo.jsx":"31","F:\\project\\Recruitment-ui\\src\\modules\\myapplication\\index.js":"32","F:\\project\\Recruitment-ui\\src\\modules\\myapplication\\sagas.js":"33","F:\\project\\Recruitment-ui\\src\\components\\ApplicationList\\ApplicationList.jsx":"34","F:\\project\\Recruitment-ui\\src\\modules\\message\\index.js":"35","F:\\project\\Recruitment-ui\\src\\containers\\ApplicationPage\\ApplicationPage.jsx":"36","F:\\project\\Recruitment-ui\\src\\components\\MessageTable\\MessageTable.jsx":"37","F:\\project\\Recruitment-ui\\src\\components\\FeedbackForm\\FeedbackForm.jsx":"38","F:\\project\\Recruitment-ui\\src\\containers\\FeedbackPage\\FeedbackPage.jsx":"39","F:\\project\\Recruitment-ui\\src\\modules\\message\\sagas.js":"40","F:\\project\\Recruitment-ui\\src\\containers\\MessagePage\\MessagePage.jsx":"41","F:\\project\\Recruitment-ui\\src\\modules\\refer\\index.js":"42","F:\\project\\Recruitment-ui\\src\\modules\\refer\\sagas.js":"43","F:\\project\\Recruitment-ui\\src\\containers\\Poster\\PosterListPage.jsx":"44","F:\\project\\Recruitment-ui\\src\\components\\PosterList\\PosterList.jsx":"45","F:\\project\\Recruitment-ui\\src\\containers\\Poster\\PosterDetailPage.jsx":"46","F:\\project\\Recruitment-ui\\src\\components\\ReferralsList\\ReferralsList.jsx":"47","F:\\project\\Recruitment-ui\\src\\containers\\About\\AboutPage.jsx":"48","F:\\project\\Recruitment-ui\\src\\containers\\ReferPage\\ReferPage.jsx":"49"},{"size":478,"mtime":1611274610899,"results":"50","hashOfConfig":"51"},{"size":609,"mtime":1616293888582,"results":"52","hashOfConfig":"53"},{"size":1979,"mtime":1617192844130,"results":"54","hashOfConfig":"51"},{"size":1883,"mtime":1619158205648,"results":"55","hashOfConfig":"51"},{"size":5860,"mtime":1619155819732,"results":"56","hashOfConfig":"51"},{"size":1518,"mtime":1619157339235,"results":"57","hashOfConfig":"51"},{"size":617,"mtime":1616293860051,"results":"58","hashOfConfig":"53"},{"size":2967,"mtime":1611380754056,"results":"59","hashOfConfig":"51"},{"size":2249,"mtime":1611380916311,"results":"60","hashOfConfig":"53"},{"size":504,"mtime":1611388171453,"results":"61","hashOfConfig":"53"},{"size":9997,"mtime":1619225825936,"results":"62","hashOfConfig":"51"},{"size":3180,"mtime":1619225007445,"results":"63","hashOfConfig":"51"},{"size":1711,"mtime":1614851400386,"results":"64","hashOfConfig":"51"},{"size":4663,"mtime":1611375655736,"results":"65","hashOfConfig":"51"},{"size":7058,"mtime":1611409558369,"results":"66","hashOfConfig":"51"},{"size":1294,"mtime":1611384471440,"results":"67","hashOfConfig":"51"},{"size":6045,"mtime":1611382796008,"results":"68","hashOfConfig":"51"},{"size":3229,"mtime":1611386858025,"results":"69","hashOfConfig":"53"},{"size":6306,"mtime":1617279040470,"results":"70","hashOfConfig":"51"},{"size":849,"mtime":1612586466389,"results":"71","hashOfConfig":"51"},{"size":4543,"mtime":1617278972157,"results":"72","hashOfConfig":"51"},{"size":7194,"mtime":1617279555794,"results":"73","hashOfConfig":"51"},{"size":2506,"mtime":1617283415757,"results":"74","hashOfConfig":"51"},{"size":2479,"mtime":1612603627112,"results":"75","hashOfConfig":"51"},{"size":2489,"mtime":1612603595279,"results":"76","hashOfConfig":"51"},{"size":4747,"mtime":1617278887367,"results":"77","hashOfConfig":"51"},{"size":389,"mtime":1611274610897,"results":"78","hashOfConfig":"53"},{"size":1869,"mtime":1614605115817,"results":"79","hashOfConfig":"51"},{"size":817,"mtime":1614605954383,"results":"80","hashOfConfig":"51"},{"size":1807,"mtime":1614606607430,"results":"81","hashOfConfig":"53"},{"size":3249,"mtime":1614607295924,"results":"82","hashOfConfig":"51"},{"size":1547,"mtime":1616292468079,"results":"83","hashOfConfig":"51"},{"size":1422,"mtime":1614847372885,"results":"84","hashOfConfig":"53"},{"size":2554,"mtime":1614849435092,"results":"85","hashOfConfig":"51"},{"size":2415,"mtime":1614849758905,"results":"86","hashOfConfig":"51"},{"size":948,"mtime":1614847718754,"results":"87","hashOfConfig":"51"},{"size":1875,"mtime":1614851849056,"results":"88","hashOfConfig":"51"},{"size":3591,"mtime":1614859217154,"results":"89","hashOfConfig":"51"},{"size":995,"mtime":1614858951366,"results":"90","hashOfConfig":"51"},{"size":2406,"mtime":1614855271183,"results":"91","hashOfConfig":"53"},{"size":1310,"mtime":1614854927988,"results":"92","hashOfConfig":"51"},{"size":2402,"mtime":1616293929089,"results":"93","hashOfConfig":"51"},{"size":2405,"mtime":1616332225160,"results":"94","hashOfConfig":"53"},{"size":450,"mtime":1616301857265,"results":"95","hashOfConfig":"51"},{"size":1995,"mtime":1619157816873,"results":"96","hashOfConfig":"51"},{"size":1642,"mtime":1619009495784,"results":"97","hashOfConfig":"51"},{"size":2726,"mtime":1616459909316,"results":"98","hashOfConfig":"51"},{"size":1437,"mtime":1617192958605,"results":"99","hashOfConfig":"51"},{"size":299,"mtime":1616298032524,"results":"100","hashOfConfig":"51"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"d5ynjl",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11xsvnn",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"138"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"144"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"138"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},"F:\\project\\Recruitment-ui\\src\\modules\\store\\index.js",[],["233","234"],"F:\\project\\Recruitment-ui\\src\\modules\\sagas.js",[],"F:\\project\\Recruitment-ui\\src\\routes\\index.js",[],["235","236"],"F:\\project\\Recruitment-ui\\src\\components\\JobCollapse\\JobCollapse.jsx",[],"F:\\project\\Recruitment-ui\\src\\containers\\JobDetail\\JobDetail.jsx",["237"],"import React, { Component } from 'react'\r\nimport { Descriptions, Row, Col, Button, Modal, message, Affix } from 'antd'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { actions as JobsActions } from '../../modules/jobs'\r\nimport qs from 'qs'\r\n\r\n\r\nclass JobDetail extends Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isModalVisible: false,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n\r\n    setIsModalVisible = isModalVisible => {\r\n        this.setState({ isModalVisible })\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setIsModalVisible(true);\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({ loading: true })\r\n        this.props.actions.postApplyJob({\r\n            username: this.props.application.username,\r\n            jobID: this.props.jobs.jobSelected,\r\n            fromID: this.props.jobs.fromID ? this.props.jobs.fromID : '',\r\n            memo: ''\r\n        })\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setIsModalVisible(false);\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.jobs.jobSelected) {\r\n            this.props.actions.getJobInfo({ jobID: this.props.jobs.jobSelected })\r\n            this.props.actions.getJobRequirement({ jobID: this.props.jobs.jobSelected })\r\n        } else if (qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).jobID) {\r\n            this.props.actions.updateJobSelected(qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).jobID)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if (prevProps.jobs.jobSelected === null && this.props.jobs.jobSelected) {\r\n            this.props.actions.getJobInfo({ jobID: this.props.jobs.jobSelected })\r\n            this.props.actions.getJobRequirement({ jobID: this.props.jobs.jobSelected })\r\n        }\r\n        if (prevProps.jobs.jobApplyStatus === null && this.props.jobs.jobApplyStatus) {\r\n            this.setState({ loading: false })\r\n            if (this.props.jobs.jobApplyStatus.status !== 0) {\r\n                message.error(this.props.jobs.jobApplyStatus.msg)\r\n            } else {\r\n                message.success('申请成功')\r\n                this.setIsModalVisible(false);\r\n            }\r\n            this.props.actions.updateApplyJob(null)\r\n        }\r\n    }\r\n\r\n    onClickBack = () => {\r\n        this.props.actions.updateJobSelected(null)\r\n        this.props.history.push('/homepage')\r\n    }\r\n\r\n    onClickApply = () => {\r\n        if (this.props.application.loggedIn) {\r\n            this.showModal()\r\n        } else {\r\n            message.info('请先登录')\r\n            this.props.history.push('/login')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { jobInfo, jobRequirement } = this.props.jobs\r\n        const { isModalVisible, loading } = this.state\r\n        if (!jobRequirement || !jobInfo) {\r\n            return (<h3>载入中...</h3>)\r\n        }\r\n        return (\r\n            <div>\r\n                <Row gutter={[16, 32]}>\r\n                    <Col span={24}>\r\n                        <Descriptions title={<a>{jobInfo[0].jobName}</a>}\r\n                            extra={<Affix offsetTop={20}><Button type=\"primary\" onClick={this.onClickApply}>我要申请</Button></Affix>}>\r\n                            <Descriptions.Item label=\"岗位名称\" labelStyle={{ fontWeight: 'bolder' }}>{jobInfo[0].jobName}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"发布日期\" labelStyle={{ fontWeight: 'bolder' }}>{jobInfo[0].issueDate}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"录用条件\" labelStyle={{ fontWeight: 'bolder' }}></Descriptions.Item><Descriptions.Item><ul>{jobRequirement.map(req => <li style={{ textAlign: 'left' }} key={req.ID}>{req.item}</li>)}</ul></Descriptions.Item>\r\n                            <Descriptions.Item label=\"薪资范围\" labelStyle={{ fontWeight: 'bolder' }}><span style={{ textAlign: 'left' }}>{jobInfo[0].payMin + \" - \" + jobInfo[0].payMax}元/月</span></Descriptions.Item>\r\n                            <Descriptions.Item label=\"薪资结构\" labelStyle={{ fontWeight: 'bolder' }}><span style={{ textAlign: 'left' }}>{jobInfo[0].payStructure}</span></Descriptions.Item>\r\n                            <Descriptions.Item label=\"福利待遇\" labelStyle={{ fontWeight: 'bolder' }}><span style={{ textAlign: 'left' }}>{jobInfo[0].benefit}</span></Descriptions.Item>\r\n                            <Descriptions.Item label=\"说明\" labelStyle={{ fontWeight: 'bolder' }}><span style={{ textAlign: 'left' }}>{jobInfo[0].memo}</span></Descriptions.Item>\r\n                        </Descriptions>\r\n                    </Col>\r\n                </Row>\r\n                <Modal title=\"确认申请\" visible={isModalVisible}\r\n                    footer={[\r\n                        <Button key=\"cancel\" onClick={this.handleCancel}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"confirm\" type=\"primary\" loading={loading} onClick={this.handleOk}>\r\n                            确定\r\n                        </Button>,\r\n                    ]}>\r\n                    <p>确认要申请这个职位么</p>\r\n                </Modal>\r\n                <Row gutter={[16, 32]}>\r\n                    <Col span={24}>\r\n                        <Button type=\"primary\" onClick={this.onClickBack}>返回列表</Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    jobs: state.jobs,\r\n    application: state.application\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(JobsActions, dispatch)\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(JobDetail));","F:\\project\\Recruitment-ui\\src\\containers\\HomePage\\HomePage.jsx",[],"F:\\project\\Recruitment-ui\\src\\modules\\index.js",["238"],"F:\\project\\Recruitment-ui\\src\\modules\\jobs\\index.js",[],"F:\\project\\Recruitment-ui\\src\\modules\\jobs\\sagas.js",[],["239","240"],"F:\\project\\Recruitment-ui\\src\\containers\\App.js",["241"],"import MainView from \"./MainView\";\r\nimport axios from 'axios'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_ALIYUNHOST ? process.env.REACT_APP_ALIYUNHOST + \":8087\" : \"http://127.0.0.1:8087\"\r\naxios.defaults.withCredentials = true\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Redirect exact from=\"/\" to=\"/homepage\" />\r\n        <MainView />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["242","243"],"F:\\project\\Recruitment-ui\\src\\containers\\MainView.jsx",["244","245","246","247","248"],"import React, { Component } from 'react'\r\nimport { Button, Layout, Menu, message, Row, Col } from 'antd'\r\nimport { Route, withRouter } from 'react-router-dom'\r\nimport 'antd/dist/antd.css'\r\nimport routes from '../routes'\r\nimport './MainView.css'\r\nimport { actions as LoginActions } from '../modules/application'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {\r\n    MenuOutlined\r\n} from '@ant-design/icons';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport HomeIcon from '@material-ui/icons/HomeOutlined'\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport PanToolIcon from '@material-ui/icons/PanTool';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nconst drawerWidth = `100%`;\r\nconst { Header, Content, Footer, Sider } = Layout\r\nconst links = [{\r\n    key: \"1\",\r\n    text: `主页`,\r\n    icon: <HomeIcon />\r\n},\r\n{\r\n    key: \"4\",\r\n    text: `个人简历`,\r\n    icon: <DescriptionIcon />\r\n},\r\n{\r\n    key: '6',\r\n    text: `我的应聘`,\r\n    icon: <PanToolIcon />\r\n},\r\n{\r\n    key: '9',\r\n    text: `我要推广`,\r\n    icon: <BookIcon />\r\n},\r\n{\r\n    key: '10',\r\n    text: `我推荐的`,\r\n    icon: <GroupIcon />\r\n},\r\n{\r\n    key: '5',\r\n    text: `账号信息`,\r\n    icon: <AccountBoxIcon />\r\n},\r\n{\r\n    key: '8',\r\n    text: `我的消息`,\r\n    icon: <InboxIcon />\r\n},\r\n{\r\n    key: '7',\r\n    text: `反馈`,\r\n    icon: <FeedbackIcon />\r\n},\r\n{\r\n    key: '11',\r\n    text: `关于我们`,\r\n    icon: <InfoIcon />\r\n}]\r\n\r\n\r\nclass MainView extends Component {\r\n\r\n\r\n    get routes() {\r\n        return (\r\n            routes.map(route => (\r\n                <Route key={route.pathKey} exact {...route} />\r\n            ))\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount\")\r\n        this.props.actions.confirmLogin()\r\n    }\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if(prevProps.application.loggedIn && !this.props.application.loggedIn){\r\n            this.toggleDrawer('top', false)\r\n            message.info('登出成功')\r\n        }\r\n\r\n        if(!prevProps.application.loggedIn && this.props.application.loggedIn){\r\n            this.toggleDrawer('top', false)\r\n            message.success('登录成功')\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            top: false\r\n        }\r\n    }\r\n\r\n    onClick = e => {\r\n        this.toggleDrawer('top', false)\r\n        switch (e) {\r\n            case \"1\":\r\n                this.props.history.push(\"/homepage\")\r\n                break\r\n            case \"2\":\r\n                this.props.actions.requestLogout()\r\n                break\r\n            case \"3\":\r\n                this.props.history.push(\"/login\")\r\n                break\r\n            case \"4\":\r\n                this.props.history.push(\"/resume\")\r\n                break\r\n            case \"5\":\r\n                this.props.history.push(\"/accountInfo\")\r\n                break\r\n            case \"6\":\r\n                this.props.history.push(\"/myApplication\")\r\n                break\r\n            case \"7\":\r\n                this.props.history.push(\"/feedbackpage\")\r\n                break\r\n            case \"8\":\r\n                this.props.history.push(\"/messagepage\")\r\n                break\r\n            case \"9\":\r\n                this.props.history.push(\"/posterList\")\r\n                break\r\n            case \"10\":\r\n                this.props.history.push(\"/refer\")\r\n                break\r\n            case \"11\":\r\n                this.props.history.push(\"/about\")\r\n                break\r\n            default:\r\n                this.props.history.push(\"/homepage\")\r\n        }\r\n    }\r\n\r\n\r\n    setCollapseContent = () => {\r\n        this.toggleDrawer('top', false)\r\n    }\r\n\r\n    toggleDrawer = (anchor, open) => {\r\n        this.setState({ ...this.state, [anchor]: open });\r\n    };\r\n    render() {\r\n        return (\r\n            <Layout onClick={message.destroy()}>\r\n                <Header style={{ backgroundColor: '#1976d2', textAlign: 'left', color: 'white', fontSize: '1.5em' }}>\r\n                    <Row gutter={16} onClick={() => this.toggleDrawer('top', true)}>\r\n                        <Col className=\"gutter-row\" span={2} >\r\n                            <MenuOutlined style={{ fontWeight: 'bolder' }} />\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={2}>\r\n\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={20}>\r\n                            <span>个人中心</span>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Drawer\r\n                    className={`drawer`}\r\n                    variant=\"persistent\"\r\n                    anchor=\"top\"\r\n                    open={this.state.top}\r\n                    classes={{\r\n                        paper: `drawPaper`,\r\n                    }}\r\n\r\n                    onClose={() => this.toggleDrawer('top', false)}\r\n                >\r\n                    <Divider />\r\n                    <List>\r\n                        {links.map(link => (\r\n                            <ListItem button key={link.key} onClick={() => this.onClick(link.key)}>\r\n                                <ListItemIcon>{link.icon}</ListItemIcon>\r\n                                <ListItemText primary={link.text} />\r\n                            </ListItem>\r\n                        ))}\r\n\r\n                    </List>\r\n                    <Divider />\r\n                    {this.props.application.loggedIn ? <ListItem button key={'2'} onClick={() => this.onClick('2')}>\r\n                        <ListItemIcon> <InboxIcon /></ListItemIcon>\r\n                        <ListItemText primary={`登出`} />\r\n                    </ListItem> :\r\n                        <ListItem button key={'3'} onClick={() => this.onClick('3')}>\r\n                            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n                            <ListItemText primary={`登录/注册`} />\r\n                        </ListItem>}\r\n                </Drawer>\r\n                {/* <Sider\r\n                    breakpoint=\"md\"\r\n                    collapsedWidth=\"0\"\r\n                    style={{ height: \"100vh\", position: \"fixed\", zIndex: 99 }}\r\n                    collapsed={this.state.collapsed}\r\n                    onClick={this.setCollapse}\r\n                >\r\n                    <div className=\"logo\">\r\n                        <b style={{ color: 'white' }}></b>\r\n                    </div>\r\n                    <Menu onClick={this.onClick} theme=\"dark\" mode=\"inline\" expandIcon={<AppstoreOutlined />}>\r\n                        <Menu.Item key=\"1\" icon={<AppstoreOutlined />} title={\"\"}>\r\n                            主页\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\" icon={<AppstoreOutlined />} title={\"\"}>\r\n                            个人简历\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"6\" icon={<AppstoreOutlined />} title={\"\"}>\r\n                            我的应聘\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"9\" icon={<AppstoreOutlined />} title={\"\"}>\r\n                            我要推广\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"10\" icon={<AppstoreOutlined />} title={\"\"}>\r\n                            我推荐的\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"5\" icon={<AppstoreOutlined />} title={\"\"}>\r\n                            账号信息\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"8\" icon={<MailOutlined />} title={\"\"}>\r\n                            我的消息\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"7\" icon={<InfoCircleOutlined />} title={\"\"}>\r\n                            反馈\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"11\" icon={<InfoCircleOutlined />} title={\"\"}>\r\n                            关于我们\r\n                        </Menu.Item>\r\n                        {this.props.application.loggedIn ?\r\n                            <Menu.Item key=\"2\" icon={<LogoutOutlined />} title={\"\"}>\r\n                                登出\r\n                            </Menu.Item> :\r\n                            <Menu.Item key=\"3\" icon={<InfoCircleOutlined />} title={\"\"}>\r\n                                登录/注册\r\n                         </Menu.Item>\r\n                        }\r\n\r\n                    </Menu>\r\n                </Sider> */}\r\n                <Layout className=\"site-layout\" style={{ padding: 0 }} onClick={this.setCollapseContent}>\r\n                    <Content style={{ margin: '24px 16px 0', overflow: 'initial' }} >\r\n                        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360, textAlign: 'center' }}>\r\n                            {this.routes}\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>NetBlue @2020</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    application: state.application\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(LoginActions, dispatch)\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainView))","F:\\project\\Recruitment-ui\\src\\components\\LoginForm\\LoginForm.jsx",["249"],"F:\\project\\Recruitment-ui\\src\\containers\\LoginPage\\LoginPage.jsx",[],["250","251"],"F:\\project\\Recruitment-ui\\src\\modules\\function\\checkID.js",["252","253","254","255","256","257","258","259","260","261","262","263","264"],"export default function checkIDcard(idcard)//校验身份证号码\r\n{\r\n    /*\r\n    1.\"验证通过!\", \r\n    2.\"身份证号码位数不对!\", \r\n    3.\"身份证号码出生日期超出范围或含有非法字符!\", \r\n    4.\"身份证号码校验错误!\", \r\n    5.\"身份证地区非法!\" \r\n    */\r\n    var Errors = new Array(1, 2, 3, 4, 5);\r\n    var area = { 11: \"北京\", 12: \"天津\", 13: \"河北\", 14: \"山西\", 15: \"内蒙古\", 21: \"辽宁\", 22: \"吉林\", 23: \"黑龙江\", 31: \"上海\", 32: \"江苏\", 33: \"浙江\", 34: \"安徽\", 35: \"福建\", 36: \"江西\", 37: \"山东\", 41: \"河南\", 42: \"湖北\", 43: \"湖南\", 44: \"广东\", 45: \"广西\", 46: \"海南\", 50: \"重庆\", 51: \"四川\", 52: \"贵州\", 53: \"云南\", 54: \"西藏\", 61: \"陕西\", 62: \"甘肃\", 63: \"青海\", 64: \"宁夏\", 65: \"新疆\", 71: \"台湾\", 81: \"香港\", 82: \"澳门\", 91: \"国外\" }\r\n    var idcard, Y, JYM;\r\n    var S, M;\r\n    var idcard_array = new Array();\r\n    idcard_array = idcard.split(\"\");\r\n    var ereg;\r\n    //地区检验 \r\n    if (area[parseInt(idcard.substr(0, 2))] == null) return Errors[4];\r\n    //身份号码位数及格式检验 \r\n    switch (idcard.length) {\r\n        case 15:\r\n            if ((parseInt(idcard.substr(6, 2)) + 1900) % 4 == 0 || ((parseInt(idcard.substr(6, 2)) + 1900) % 100 == 0 && (parseInt(idcard.substr(6, 2)) + 1900) % 4 == 0)) {\r\n                ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}$/;//测试出生日期的合法性 \r\n            } else {\r\n                ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}$/;//测试出生日期的合法性 \r\n            }\r\n            if (ereg.test(idcard)) return Errors[0];\r\n            else return Errors[2];\r\n            break;\r\n        case 18:\r\n            //18位身份号码检测 \r\n            //出生日期的合法性检查  \r\n            //闰年月日:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9])) \r\n            //平年月日:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8])) \r\n            if (parseInt(idcard.substr(6, 4)) % 4 == 0 || (parseInt(idcard.substr(6, 4)) % 100 == 0 && parseInt(idcard.substr(6, 4)) % 4 == 0)) {\r\n                //ereg = /^[1-9][0-9]{5}19[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$/;//闰年出生日期的合法性正则表达式 \r\n                ereg = /^[1-9][0-9]{5}[1-9][0-9][0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$/;//闰年出生日期的合法性正则表达式 \r\n            } else {\r\n                //ereg = /^[1-9][0-9]{5}19[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}[0-9Xx]$/;//平年出生日期的合法性正则表达式 \r\n                ereg = /^[1-9][0-9]{5}[1-9][0-9][0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}[0-9Xx]$/;//平年出生日期的合法性正则表达式 \r\n            }\r\n            if (ereg.test(idcard)) {//测试出生日期的合法性 \r\n                //计算校验位 \r\n                S = (parseInt(idcard_array[0]) + parseInt(idcard_array[10])) * 7\r\n                    + (parseInt(idcard_array[1]) + parseInt(idcard_array[11])) * 9\r\n                    + (parseInt(idcard_array[2]) + parseInt(idcard_array[12])) * 10\r\n                    + (parseInt(idcard_array[3]) + parseInt(idcard_array[13])) * 5\r\n                    + (parseInt(idcard_array[4]) + parseInt(idcard_array[14])) * 8\r\n                    + (parseInt(idcard_array[5]) + parseInt(idcard_array[15])) * 4\r\n                    + (parseInt(idcard_array[6]) + parseInt(idcard_array[16])) * 2\r\n                    + parseInt(idcard_array[7]) * 1\r\n                    + parseInt(idcard_array[8]) * 6\r\n                    + parseInt(idcard_array[9]) * 3;\r\n                Y = S % 11;\r\n                M = \"F\";\r\n                JYM = \"10X98765432\";\r\n                M = JYM.substr(Y, 1);//判断校验位 \r\n                if (M == idcard_array[17]) return Errors[0]; //检测ID的校验位 \r\n                else return Errors[3];\r\n            }\r\n            else return Errors[2];\r\n            break;\r\n        default:\r\n            return Errors[1];\r\n            break;\r\n    }\r\n}",["265","266"],"F:\\project\\Recruitment-ui\\src\\components\\RegisterForm\\RegisterForm.jsx",["267","268","269","270","271","272"],"import React, { Component } from 'react'\r\nimport { Form, Input, Button, Select, Radio, message, Upload, AutoComplete } from 'antd'\r\nimport checkIDcard from '../../modules/function/checkID'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst props = {\r\n    name: 'avatar',\r\n    headers: {\r\n        authorization: 'authorization-text',\r\n    }\r\n};\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst { Option } = Select\r\nclass RegisterForm extends Component {\r\n    formRef = React.createRef()\r\n    constructor(props) {\r\n        super(props)\r\n        this.checkIDcard = checkIDcard\r\n        this.state = { username: null, password: null }\r\n    }\r\n\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if (this.props.application.registered) {\r\n            message.success('注册成功')\r\n            this.props.actions.requestLogin({ username: this.state.username, password: this.state.password })\r\n            this.props.history.push('/login')\r\n            this.props.actions.resetRegisterStatus()\r\n        } else if (this.props.application.registerError) {\r\n            message.error(this.props.application.registerError)\r\n            this.props.actions.resetRegisterStatus()\r\n        }\r\n    }\r\n\r\n\r\n    onFinish = values => {\r\n        this.props.actions.requestRegister({\r\n            username: values.username,\r\n            name: values.name,\r\n            mobile: values.mobile,\r\n            registerID: values.username,\r\n            fromID: this.props.jobs.fromID ? this.props.jobs.fromID : '',\r\n            password: values.password\r\n        })\r\n        console.log('Success:', values)\r\n        this.setState({\r\n            username: values.username,\r\n            password: values.password\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { kindID } = this.state\r\n        return (\r\n            <Form\r\n                {...formItemLayout}\r\n                onFinish={this.onFinish}\r\n                scrollToFirstError\r\n                initialValues={{ kindID: \"0\" }}\r\n                onValuesChange={this.onValuesChange}\r\n                ref={this.formRef}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    label=\"身份证\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入身份证号',\r\n                        },\r\n                        {\r\n                            validator: (rule, value) => {\r\n                                console.log(this.checkIDcard(value))\r\n                                if (!value || this.checkIDcard(value) === 1) {\r\n                                    return Promise.resolve();\r\n                                } else if (this.checkIDcard(value) === 2) {\r\n                                    return Promise.reject('身份证号码位数不对');\r\n                                } else if (this.checkIDcard(value) === 3) {\r\n                                    return Promise.reject('身份证号码出生日期超出范围或含有非法字符');\r\n                                } else if (this.checkIDcard(value) === 4) {\r\n                                    return Promise.reject('身份证号码校验错误');\r\n                                } else if (this.checkIDcard(value) === 5) {\r\n                                    return Promise.reject('身份证地区非法');\r\n                                } else\r\n                                    return Promise.reject('身份证号码校验错误');\r\n                            },\r\n                        }\r\n\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"name\"\r\n                    label=\"姓名\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入姓名',\r\n                        },\r\n\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    label=\"密码\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入密码',\r\n                        },\r\n                        {\r\n                            min: 6,\r\n                            message: '密码至少六位'\r\n                        }\r\n                    ]}\r\n                    hasFeedback\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"confirm\"\r\n                    label=\"确认密码\"\r\n                    dependencies={['password']}\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请确认密码',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                            validator(rule, value) {\r\n                                if (!value || getFieldValue('password') === value) {\r\n                                    return Promise.resolve();\r\n                                }\r\n                                return Promise.reject('两次输入不匹配');\r\n                            },\r\n                        }),\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"mobile\"\r\n                    label=\"手机号码\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入手机号码',\r\n                        },\r\n                        {\r\n                            validator: (rule, value) => {\r\n                                console.log(this.checkIDcard(value))\r\n                                if (!value || value.length === 11) {\r\n                                    return Promise.resolve();\r\n                                } else {\r\n                                    return Promise.reject('手机号不合法')\r\n                                }\r\n                            },\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">注册</Button>\r\n                    <span> </span>\r\n                    <span> </span>\r\n                    <a href=\"/login\">取消</a>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        )\r\n    }\r\n}\r\nexport default withRouter(RegisterForm)","F:\\project\\Recruitment-ui\\src\\containers\\Register\\Register.jsx",[],["273","274"],"F:\\project\\Recruitment-ui\\src\\modules\\application\\index.js",["275"],"F:\\project\\Recruitment-ui\\src\\modules\\application\\sagas.js",[],"F:\\project\\Recruitment-ui\\src\\components\\Resume\\ResumeForm.jsx",[],["276","277"],"F:\\project\\Recruitment-ui\\src\\containers\\ResumePage\\ResumePage.jsx",[],["278","279"],"F:\\project\\Recruitment-ui\\src\\modules\\resume\\sagas.js",[],"F:\\project\\Recruitment-ui\\src\\components\\Resume\\ResumeDetailList.jsx",["280","281"],"import React, { Component } from 'react'\r\nimport { List, Button, message, Popconfirm } from 'antd';\r\nimport SkillModal from './SkillModal'\r\nimport JobModal from './JobModal'\r\nimport EducationModal from './EducationModal'\r\n\r\nexport default class ResumeDetailList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            skillVisible: false,\r\n            jobVisible: false,\r\n            educationVisible: false,\r\n            loading: false,\r\n            editingItem: null\r\n        }\r\n    }\r\n\r\n    confirm = item => {\r\n        console.log('post delete')\r\n        this.props.actions.deleteResumeDetail({ ID: item.ID, registerID: this.props.application.username })\r\n    }\r\n\r\n    onClickEdit = item => {\r\n        switch (this.props.kind) {\r\n            case \"skill\":\r\n                this.setState({ editingItem: item, skillVisible: true });\r\n                break;\r\n            case \"job\":\r\n                this.setState({ editingItem: item, jobVisible: true });\r\n                break;\r\n            case \"education\":\r\n                this.setState({ editingItem: item, educationVisible: true });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onClick = () => {\r\n        switch (this.props.kind) {\r\n            case \"skill\":\r\n                this.setState({ editingItem: null, skillVisible: true });\r\n                break;\r\n            case \"job\":\r\n                this.setState({ editingItem: null, jobVisible: true });\r\n                break;\r\n            case \"education\":\r\n                this.setState({ editingItem: null, educationVisible: true });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({ skillVisible: false, educationVisible: false, jobVisible: false, editingItem: null })\r\n    }\r\n\r\n    submitSkill = (values, editingItem) => {\r\n        console.log(values)\r\n        this.setState({ loading: true })\r\n        this.props.actions.postResumeDetail({\r\n            ...values,\r\n            kind: \"skill\",\r\n            ID: editingItem ? editingItem.ID : \"0\",\r\n            registerID: this.props.application.username,\r\n            username: this.props.application.username,\r\n            dateStart: \"\",\r\n            dateEnd: \"\",\r\n        })\r\n\r\n    }\r\n\r\n    submitJob = (values, editingItem) => {\r\n        console.log(values)\r\n        this.setState({ loading: true })\r\n        this.props.actions.postResumeDetail({\r\n            ...values,\r\n            kind: \"job\",\r\n            ID: editingItem ? editingItem.ID : \"0\",\r\n            registerID: this.props.application.username,\r\n            username: this.props.application.username,\r\n            years: \"\",\r\n            memo: \"\",\r\n        })\r\n\r\n    }\r\n\r\n    submitEducation = (values, editingItem) => {\r\n        console.log(values)\r\n        this.setState({ loading: true }, () => {\r\n            this.props.actions.postResumeDetail({\r\n                ...values,\r\n                kind: \"education\",\r\n                ID: editingItem ? editingItem.ID : \"0\",\r\n                registerID: this.props.application.username,\r\n                username: this.props.application.username,\r\n                years: \"\",\r\n                memo: \"\",\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    componentDidUpdate = prevProps => {\r\n\r\n        if (!prevProps.resume.postResumeDetail && this.props.resume.postResumeDetail) {\r\n            if (this.props.resume.postResumeDetail.status === 0) {\r\n                this.setState({ loading: false, skillVisible: false, jobVisible: false, educationVisible: false, editingItem: null }, () => {\r\n                    this.props.actions.getResumeDetail({ username: this.props.application.username })\r\n                    if (this.props.kind === \"skill\") {\r\n                        message.success(\"更新成功\")\r\n                    }\r\n                })\r\n            } else {\r\n                this.setState({ loading: false })\r\n                message.error(this.props.resume.postResumeDetail.msg)\r\n            }\r\n            this.props.actions.updatePostResumeDetail(null)\r\n        }\r\n\r\n        else if (!prevProps.resume.deleteResumeDetail && this.props.resume.deleteResumeDetail) {\r\n            if (this.props.resume.deleteResumeDetail.status === 0) {\r\n                this.props.actions.getResumeDetail({ username: this.props.application.username })\r\n                if (this.props.kind === \"skill\") {\r\n                    message.success(\"删除成功\")\r\n                }\r\n            } else {\r\n                message.error(this.props.resume.deleteResumeDetail.msg)\r\n            }\r\n            this.props.actions.updateDeleteResumeDetail(null)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SkillModal visible={this.state.skillVisible}\r\n                    submit={(values, editingItem) => this.submitSkill(values, editingItem)}\r\n                    confirmLoading={this.state.loading}\r\n                    editingItem={this.state.editingItem}\r\n                    onCancel={this.onCancel}\r\n                    resume={this.props.resume}/>\r\n                <EducationModal visible={this.state.educationVisible}\r\n                    submit={(values, editingItem) => this.submitEducation(values, editingItem)}\r\n                    confirmLoading={this.state.loading}\r\n                    editingItem={this.state.editingItem}\r\n                    onCancel={this.onCancel} />\r\n                <JobModal visible={this.state.jobVisible}\r\n                    submit={(values, editingItem) => this.submitJob(values, editingItem)}\r\n                    confirmLoading={this.state.loading}\r\n                    editingItem={this.state.editingItem}\r\n                    onCancel={this.onCancel} />\r\n                <List\r\n                    itemLayout=\"vertical\"\r\n                    dataSource={this.props.data}\r\n                    header={<div style={{ textAlign: 'right' }}><Button type=\"primary\" size=\"small\" onClick={() => this.onClick()}>添加</Button></div>}\r\n                    renderItem={item => (\r\n                        <List.Item style={{ textAlign: 'left' }} actions={[<a key=\"list-loadmore-edit\" onClick={() => this.onClickEdit(item)}>编辑</a>,\r\n                        <Popconfirm\r\n                            placement=\"topRight\"\r\n                            title={\"确认要删除么？\"}\r\n                            onConfirm={() => this.confirm(item)}\r\n                            okText=\"确定\"\r\n                            cancelText=\"放弃\"\r\n                        ><a key=\"list-loadmore-more\">删除</a>\r\n                        </Popconfirm>]}>\r\n                            < List.Item.Meta\r\n                                title={<p>{item.item}</p>}\r\n                                description={this.props.kind === \"skill\" ?\r\n                                    item.detail1 + \"   \" + item.years + \" 年\" :\r\n                                    item.detail + \"   \" + item.dateStart + \" ~ \" + item.dateEnd}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","F:\\project\\Recruitment-ui\\src\\components\\Resume\\SkillModal.jsx",["282","283"],"import React from 'react'\r\nimport { Button, Modal, Form, Input, Radio, Select } from 'antd';\r\n\r\n\r\nconst SkillModal = ({ onCancel, visible, submit, confirmLoading, editingItem, resume }) => {\r\n    const [form] = Form.useForm();\r\n    editingItem ? form.setFieldsValue(editingItem) : form.resetFields()\r\n    return (\r\n\r\n        <Modal\r\n            visible={visible}\r\n            title=\"技能\"\r\n            okText=\"确定\"\r\n            cancelText=\"取消\"\r\n            confirmLoading={confirmLoading}\r\n            onCancel={onCancel}\r\n            destroyOnClose\r\n            onOk={() => {\r\n                form\r\n                    .validateFields()\r\n                    .then((values) => {\r\n                        submit(values, editingItem);\r\n                    })\r\n                    .catch((info) => {\r\n                        console.log('Validate Failed:', info);\r\n                    });\r\n            }}\r\n        >\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                name=\"form_in_modal\"\r\n            >\r\n                <Form.Item\r\n                    name=\"item\"\r\n                    label=\"技能名称\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入技能名称',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"detail\"\r\n                    label=\"熟练程度\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入技能名称',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Select>\r\n                        {resume.skillLevel ? resume.skillLevel.map(level => (\r\n                            <Select.Option key={level.ID} value={level.ID}>{level.item}</Select.Option>\r\n                        )) : null}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"years\"\r\n                    label=\"从事年限\"\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"memo\" label=\"说明\">\r\n                    <Input type=\"textarea\" />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal >\r\n\r\n    );\r\n}\r\nexport default SkillModal",["284","285"],"F:\\project\\Recruitment-ui\\src\\components\\Resume\\EducationModal.jsx",["286"],"import React from 'react'\r\nimport { Button, Modal, Form, Input, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\nconst dateFormat = 'YYYY-MM-DD';\r\n\r\nconst EducationModal = ({ onCancel, visible, submit, confirmLoading, editingItem }) => {\r\n    const [form] = Form.useForm();\r\n    editingItem ?\r\n    form.setFieldsValue({ ...editingItem, dateEnd: editingItem ? moment(editingItem.dateEnd, dateFormat) : null, dateStart: editingItem ? moment(editingItem.dateStart, dateFormat) : null }) :\r\n    form.resetFields()\r\n    return (\r\n\r\n        <Modal\r\n            visible={visible}\r\n            title=\"教育经历\"\r\n            okText=\"确定\"\r\n            cancelText=\"取消\"\r\n            confirmLoading={confirmLoading}\r\n            onCancel={onCancel}\r\n            destroyOnClose\r\n            onOk={() => {\r\n                form\r\n                    .validateFields()\r\n                    .then((values) => {\r\n                        submit(values, editingItem);\r\n                    })\r\n                    .catch((info) => {\r\n                        console.log('Validate Failed:', info);\r\n                    });\r\n            }}\r\n        >\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                name=\"form_in_modal\"\r\n            >\r\n                <Form.Item\r\n                    name=\"item\"\r\n                    label=\"院校名称\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入院校名称',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"detail\"\r\n                    label=\"专业\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入专业',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"dateStart\"\r\n                    label=\"起始日期\"\r\n                >\r\n                    <DatePicker />\r\n                </Form.Item>\r\n                <Form.Item name=\"dateEnd\" label=\"截止日期\">\r\n                    <DatePicker />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal >\r\n\r\n    );\r\n}\r\nexport default EducationModal","F:\\project\\Recruitment-ui\\src\\components\\Resume\\JobModal.jsx",["287"],"import React from 'react'\r\nimport { DatePicker, Modal, Form, Input, Radio } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst dateFormat = 'YYYY-MM-DD';\r\nconst JobModal = ({ onCancel, visible, submit, confirmLoading, editingItem }) => {\r\n    const [form] = Form.useForm();\r\n    editingItem ?\r\n        form.setFieldsValue({ ...editingItem, dateEnd: editingItem ? moment(editingItem.dateEnd, dateFormat) : null, dateStart: editingItem ? moment(editingItem.dateStart, dateFormat) : null }) :\r\n        form.resetFields()\r\n    return (\r\n\r\n        <Modal\r\n            visible={visible}\r\n            title=\"工作\"\r\n            okText=\"確定\"\r\n            cancelText=\"取消\"\r\n            confirmLoading={confirmLoading}\r\n            onCancel={onCancel}\r\n            destroyOnClose\r\n            onOk={() => {\r\n                form\r\n                    .validateFields()\r\n                    .then((values) => {\r\n                        submit(values, editingItem);\r\n                    })\r\n                    .catch((info) => {\r\n                        console.log('Validate Failed:', info);\r\n                    });\r\n            }}\r\n        >\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                name=\"form_in_modal\"\r\n            >\r\n                <Form.Item\r\n                    name=\"item\"\r\n                    label=\"单位名称\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入单位名称',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"detail\"\r\n                    label=\"请输入职位名称\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入技能名称',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"dateStart\"\r\n                    label=\"起始日期\"\r\n                >\r\n                    <DatePicker />\r\n                </Form.Item>\r\n                <Form.Item name=\"dateEnd\" label=\"截止日期\">\r\n                    <DatePicker />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal >\r\n\r\n    );\r\n}\r\nexport default JobModal","F:\\project\\Recruitment-ui\\src\\modules\\resume\\index.js",[],"F:\\project\\Recruitment-ui\\src\\index.js",[],["288","289"],"F:\\project\\Recruitment-ui\\src\\modules\\account\\index.js",[],["290","291"],"F:\\project\\Recruitment-ui\\src\\containers\\AccountPage\\AccountPage.jsx",[],["292","293"],"F:\\project\\Recruitment-ui\\src\\modules\\account\\sagas.js",[],"F:\\project\\Recruitment-ui\\src\\components\\Resume\\AccountInfo.jsx",["294","295"],"import React, { Component } from 'react'\r\nimport { Form, Input, Button, Select, message } from 'antd';\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nclass AccountInfo extends Component {\r\n\r\n    onFinish = values => {\r\n        this.props.actions.postAccountInfo({\r\n            username: values.username,\r\n            password: values.password,\r\n            mobile: values.mobile\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.application.username) {\r\n            this.props.actions.getAccountInfo({ username: this.props.application.username })\r\n            this.props.actions.getQRCode({ mark: 'h', size: '5', username: this.props.application.username })\r\n        } else {\r\n            this.props.history.push('/login')\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if (!prevProps.account.postAccountInfo && this.props.account.postAccountInfo) {\r\n            if (this.props.account.postAccountInfo.status === 0) {\r\n                message.success(\"保存成功\")\r\n            } else {\r\n                message.error(this.props.account.postAccountInfo.msg)\r\n            }\r\n            this.props.actions.updatePostAccountInfo(null)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.account.accountInfo) {\r\n            return (<div>Loading</div>)\r\n        }\r\n        return (\r\n            <Form\r\n                {...formItemLayout}\r\n                name=\"account\"\r\n                onFinish={this.onFinish}\r\n                initialValues={{ ...this.props.account.accountInfo[0] }}\r\n            >\r\n                <Form.Item\r\n                    label=\"身份证\"\r\n                    name=\"username\"\r\n                    rules={[{ message: 'Please input your username!' }]}\r\n                >\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"姓名\"\r\n                    name=\"name\"\r\n                >\r\n                    <Input disabled/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"手机\"\r\n                    name=\"mobile\"\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                >\r\n                    <Input type=\"password\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"二维码\"\r\n                    name=\"qrcode\"\r\n                >\r\n                    <img src={axios.defaults.baseURL + \"/public/get_user_qr?mark=H&size=4&username=\" + this.props.application.username} />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        保存\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(AccountInfo)","F:\\project\\Recruitment-ui\\src\\modules\\myapplication\\index.js",[],"F:\\project\\Recruitment-ui\\src\\modules\\myapplication\\sagas.js",[],"F:\\project\\Recruitment-ui\\src\\components\\ApplicationList\\ApplicationList.jsx",[],"F:\\project\\Recruitment-ui\\src\\modules\\message\\index.js",[],["296","297"],"F:\\project\\Recruitment-ui\\src\\containers\\ApplicationPage\\ApplicationPage.jsx",[],["298","299"],"F:\\project\\Recruitment-ui\\src\\components\\MessageTable\\MessageTable.jsx",["300","301"],"import React, { Component } from 'react'\r\nimport { Table, Modal, Button } from 'antd'\r\n\r\n\r\n\r\nexport default class MessageTable extends Component {\r\n\r\n    columns = [\r\n        {\r\n            title: '消息',\r\n            dataIndex: 'item',\r\n            key: 'item',\r\n            ellipsis: true,\r\n            render: (text, record) => <a key={record.ID} onClick={() => this.onClick(record)}>{record.status == 0 ? <span style={{ color: 'red' }}>*</span> : ''}{text}</a>,\r\n        },\r\n        {\r\n            title: '日期',\r\n            dataIndex: 'regDate',\r\n            key: 'regDate',\r\n            render: (text, record) => <p key={record.ID}>{text.slice(0, 10)}</p>\r\n        },\r\n    ]\r\n\r\n    state = {\r\n        visible: false\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.message.singleMessage) {\r\n            this.setState({ visible: true })\r\n        } else {\r\n            this.setState({ visible: false })\r\n        }\r\n    }\r\n\r\n    onClick = (record) => {\r\n        this.props.actions.getSingleMessage({ ID: record.ID })\r\n\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.props.actions.updateSingleMessage(null)\r\n        this.props.actions.getMessage({ username: this.props.application.username })\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.application.username) {\r\n            return (<h3>载入中...</h3>)\r\n        }\r\n        return (\r\n            <div>\r\n                <Modal visible={this.state.visible} onCancel={this.onCancel} onOk={this.onCancel} footer={[<Button onClick={this.onCancel}>确定</Button>]}>\r\n                    <p key={1}>{this.props.message.singleMessage ? this.props.message.singleMessage[0].item : \"Loading\"}</p>\r\n                </Modal>\r\n                <Table rowKey={record => record.ID} dataSource={this.props.message.messageList} columns={this.columns} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","F:\\project\\Recruitment-ui\\src\\components\\FeedbackForm\\FeedbackForm.jsx",["302","303"],"import React, { Component } from 'react'\r\nimport { Form, Input, Button, Select, message } from 'antd'\r\nimport { LockOutlined } from '@ant-design/icons'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nclass FeedbackForm extends Component {\r\n    formRef = React.createRef()\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.application.username) {\r\n            this.props.history.push('/login')\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if (this.props.message.postMessageRes === null && nextProps.message.postMessageRes && nextProps.message.postMessageRes.status === 0) {\r\n            message.success('反馈提交成功')\r\n            this.formRef.current.resetFields()\r\n            this.props.actions.updatePostMessage(null)\r\n        }\r\n    }\r\n\r\n    onFinish = values => {\r\n        console.log('Success:', values)\r\n        this.props.actions.postMessage({\r\n            username: this.props.account.accountInfo[0].username,\r\n            mobile: values.mobile,\r\n            email: values.email,\r\n            kindID: values.kindID,\r\n            item: values.item,\r\n            refID: \"0\"\r\n        })\r\n    }\r\n\r\n    onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo)\r\n    }\r\n    render() {\r\n        if (!this.props.account.accountInfo || !this.props.application.username) {\r\n            return (<h3>载入中...</h3>)\r\n        }\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{\r\n                    mobile: this.props.account.accountInfo[0].mobile,\r\n                    email: this.props.account.accountInfo[0].email\r\n                }}\r\n                onFinish={this.onFinish}\r\n                {...layout}\r\n                ref={this.formRef}\r\n            >\r\n                <Form.Item\r\n                    name=\"mobile\"\r\n                    label=\"手机\"\r\n                    rules={[{ required: true, message: '请输入手机' }]}\r\n                >\r\n                    <Input placeholder=\"手机号码\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    label=\"邮箱\"\r\n                    rules={[{ required: false, message: '请输入邮箱' }]}\r\n                >\r\n                    <Input\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"kindID\"\r\n                    label=\"问题类型\"\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <Select>\r\n                        {this.props.message.messageTypes.map(type => (\r\n                            <Select.Option key={type.ID} value={type.ID}>{type.item}</Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"item\"\r\n                    label=\"反馈内容\"\r\n                    rules={[{ required: true, message: '请输入反馈内容' }]}\r\n                >\r\n                    <Input.TextArea autoSize={{ minRows: 3 }} />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        提交\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(FeedbackForm)","F:\\project\\Recruitment-ui\\src\\containers\\FeedbackPage\\FeedbackPage.jsx",[],"F:\\project\\Recruitment-ui\\src\\modules\\message\\sagas.js",[],"F:\\project\\Recruitment-ui\\src\\containers\\MessagePage\\MessagePage.jsx",[],["304","305"],"F:\\project\\Recruitment-ui\\src\\modules\\refer\\index.js",[],"F:\\project\\Recruitment-ui\\src\\modules\\refer\\sagas.js",[],"F:\\project\\Recruitment-ui\\src\\containers\\Poster\\PosterListPage.jsx",[],["306","307"],"F:\\project\\Recruitment-ui\\src\\components\\PosterList\\PosterList.jsx",[],"F:\\project\\Recruitment-ui\\src\\containers\\Poster\\PosterDetailPage.jsx",["308"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Image, message, Affix } from 'antd'\r\nimport axios from 'axios'\r\nimport { FormProvider } from 'antd/lib/form/context'\r\nclass PosterDetailList extends Component {\r\n\r\n    componentDidMount() {\r\n        message.info({\r\n            content: '请点击上面图片，然后长按，转发给朋友。',\r\n            style: {\r\n                color: 'red'\r\n            },\r\n        }, 30)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            visible: true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.refer.poster) {\r\n            return (<>Loading...</>)\r\n        }\r\n        return (\r\n            <div>\r\n                <Image src={axios.defaults.baseURL + this.props.refer.poster} onClick={() => { this.setState({ visible: false }) }} />\r\n                <span>请点击上面图片，然后长按，转发给朋友。</span>\r\n                {this.state.visible ? <Affix style={{ marginTop: '10vh', paddingTop:'10px', paddingBottom:'10px' }} offsetBottom={10}>\r\n                    <div style={{ backgroundColor: 'orange', width: '100%', height:'50px', paddingTop:'12px', fontSize: \"1.3em\", fontWeight: 'bold', color: \"red\" }}>\r\n                        <>转发推荐岗位成功有奖励</>\r\n                    </div>\r\n                </Affix> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    refer: state.refer\r\n})\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(PosterDetailList))\r\n",["309","310"],"F:\\project\\Recruitment-ui\\src\\components\\ReferralsList\\ReferralsList.jsx",[],["311","312"],"F:\\project\\Recruitment-ui\\src\\containers\\About\\AboutPage.jsx",["313"],"import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default class AboutPage extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div style={{ textAlign: 'left' }}>\r\n                <h3 style={{ color: 'gray' }}>人力资源机构介绍</h3>\r\n                <p style={{ color: 'gray' }}>上海用勤人力资源公司总部位于上海，是上海市人力资源和社会保障局审批通过后备案的专业人力资源公司，拥有为各类企业服务的丰富经验，可以为企业提供全方面的专业、务实、个性各选的人力资源服务方案。</p>\r\n                <h3 style={{ color: 'gray' }}>培训机构介绍</h3>\r\n                <p style={{ color: 'gray' }}>上海智能消防学校是办学质量最高等级A级学校，学校党支部被静安区党工委评定为5星级党组织。学校职业能力培训资质齐全，有：消防、电工、焊工、制冷、弱电、电梯、水电工、物业管理等职业工种。\r\n                学校实训设施设备齐全，师资力量强大，长期为企业培养和输送专业技术人才。</p>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <p style={{ color: 'orange' }}>联系我们</p>\r\n                    <img src={axios.defaults.baseURL + \"/public/images/QR_weixin.jpg\"} style={{ width: 100 }} />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","F:\\project\\Recruitment-ui\\src\\containers\\ReferPage\\ReferPage.jsx",[],["314","315"],{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"316","replacedBy":"320"},{"ruleId":"318","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":95,"column":46,"nodeType":"324","endLine":95,"endColumn":49},{"ruleId":null,"fatal":true,"severity":2,"message":"325","line":18,"column":1},{"ruleId":"316","replacedBy":"326"},{"ruleId":"318","replacedBy":"327"},{"ruleId":"328","severity":1,"message":"329","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":15},{"ruleId":"316","replacedBy":"332"},{"ruleId":"318","replacedBy":"333"},{"ruleId":"328","severity":1,"message":"334","line":2,"column":10,"nodeType":"330","messageId":"331","endLine":2,"endColumn":16},{"ruleId":"328","severity":1,"message":"335","line":2,"column":26,"nodeType":"330","messageId":"331","endLine":2,"endColumn":30},{"ruleId":"328","severity":1,"message":"336","line":20,"column":8,"nodeType":"330","messageId":"331","endLine":20,"endColumn":16},{"ruleId":"328","severity":1,"message":"337","line":30,"column":7,"nodeType":"330","messageId":"331","endLine":30,"endColumn":18},{"ruleId":"328","severity":1,"message":"338","line":31,"column":34,"nodeType":"330","messageId":"331","endLine":31,"endColumn":39},{"ruleId":"322","severity":1,"message":"323","line":85,"column":37,"nodeType":"324","endLine":85,"endColumn":74},{"ruleId":"316","replacedBy":"339"},{"ruleId":"318","replacedBy":"340"},{"ruleId":"341","severity":1,"message":"342","line":10,"column":18,"nodeType":"343","messageId":"344","endLine":10,"endColumn":42},{"ruleId":"345","severity":1,"message":"346","line":12,"column":9,"nodeType":"330","messageId":"347","endLine":12,"endColumn":15},{"ruleId":"341","severity":1,"message":"342","line":14,"column":24,"nodeType":"343","messageId":"344","endLine":14,"endColumn":35},{"ruleId":"348","severity":1,"message":"349","line":22,"column":60,"nodeType":"350","messageId":"351","endLine":22,"endColumn":62},{"ruleId":"348","severity":1,"message":"349","line":22,"column":114,"nodeType":"350","messageId":"351","endLine":22,"endColumn":116},{"ruleId":"348","severity":1,"message":"349","line":22,"column":165,"nodeType":"350","messageId":"351","endLine":22,"endColumn":167},{"ruleId":"352","severity":1,"message":"353","line":29,"column":13,"nodeType":"354","messageId":"355","endLine":29,"endColumn":19},{"ruleId":"348","severity":1,"message":"349","line":35,"column":51,"nodeType":"350","messageId":"351","endLine":35,"endColumn":53},{"ruleId":"348","severity":1,"message":"349","line":35,"column":96,"nodeType":"350","messageId":"351","endLine":35,"endColumn":98},{"ruleId":"348","severity":1,"message":"349","line":35,"column":138,"nodeType":"350","messageId":"351","endLine":35,"endColumn":140},{"ruleId":"348","severity":1,"message":"349","line":58,"column":23,"nodeType":"350","messageId":"351","endLine":58,"endColumn":25},{"ruleId":"352","severity":1,"message":"353","line":62,"column":13,"nodeType":"354","messageId":"355","endLine":62,"endColumn":19},{"ruleId":"352","severity":1,"message":"353","line":65,"column":13,"nodeType":"354","messageId":"355","endLine":65,"endColumn":19},{"ruleId":"316","replacedBy":"356"},{"ruleId":"318","replacedBy":"357"},{"ruleId":"328","severity":1,"message":"358","line":2,"column":39,"nodeType":"330","messageId":"331","endLine":2,"endColumn":44},{"ruleId":"328","severity":1,"message":"359","line":2,"column":55,"nodeType":"330","messageId":"331","endLine":2,"endColumn":61},{"ruleId":"328","severity":1,"message":"360","line":2,"column":63,"nodeType":"330","messageId":"331","endLine":2,"endColumn":75},{"ruleId":"328","severity":1,"message":"361","line":7,"column":7,"nodeType":"330","messageId":"331","endLine":7,"endColumn":12},{"ruleId":"328","severity":1,"message":"362","line":32,"column":9,"nodeType":"330","messageId":"331","endLine":32,"endColumn":15},{"ruleId":"328","severity":1,"message":"363","line":74,"column":17,"nodeType":"330","messageId":"331","endLine":74,"endColumn":23},{"ruleId":"316","replacedBy":"364"},{"ruleId":"318","replacedBy":"365"},{"ruleId":"366","severity":1,"message":"367","line":235,"column":9,"nodeType":"368","messageId":"369","endLine":244,"endColumn":10},{"ruleId":"316","replacedBy":"370"},{"ruleId":"318","replacedBy":"371"},{"ruleId":"316","replacedBy":"372"},{"ruleId":"318","replacedBy":"373"},{"ruleId":"322","severity":1,"message":"323","line":160,"column":76,"nodeType":"324","endLine":160,"endColumn":143},{"ruleId":"322","severity":1,"message":"323","line":167,"column":26,"nodeType":"324","endLine":167,"endColumn":54},{"ruleId":"328","severity":1,"message":"334","line":2,"column":10,"nodeType":"330","messageId":"331","endLine":2,"endColumn":16},{"ruleId":"328","severity":1,"message":"358","line":2,"column":38,"nodeType":"330","messageId":"331","endLine":2,"endColumn":43},{"ruleId":"316","replacedBy":"374"},{"ruleId":"318","replacedBy":"375"},{"ruleId":"328","severity":1,"message":"334","line":2,"column":10,"nodeType":"330","messageId":"331","endLine":2,"endColumn":16},{"ruleId":"328","severity":1,"message":"358","line":2,"column":42,"nodeType":"330","messageId":"331","endLine":2,"endColumn":47},{"ruleId":"316","replacedBy":"376"},{"ruleId":"318","replacedBy":"377"},{"ruleId":"316","replacedBy":"378"},{"ruleId":"318","replacedBy":"379"},{"ruleId":"316","replacedBy":"380"},{"ruleId":"318","replacedBy":"381"},{"ruleId":"328","severity":1,"message":"382","line":2,"column":31,"nodeType":"330","messageId":"331","endLine":2,"endColumn":37},{"ruleId":"383","severity":1,"message":"384","line":95,"column":21,"nodeType":"324","endLine":95,"endColumn":139},{"ruleId":"316","replacedBy":"385"},{"ruleId":"318","replacedBy":"386"},{"ruleId":"316","replacedBy":"387"},{"ruleId":"318","replacedBy":"388"},{"ruleId":"322","severity":1,"message":"323","line":14,"column":39,"nodeType":"324","endLine":14,"endColumn":95},{"ruleId":"348","severity":1,"message":"349","line":14,"column":110,"nodeType":"350","messageId":"351","endLine":14,"endColumn":112},{"ruleId":"328","severity":1,"message":"389","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":22},{"ruleId":"390","severity":1,"message":"391","line":14,"column":5,"nodeType":"392","messageId":"393","endLine":16,"endColumn":6},{"ruleId":"316","replacedBy":"394"},{"ruleId":"318","replacedBy":"395"},{"ruleId":"316","replacedBy":"396"},{"ruleId":"318","replacedBy":"397"},{"ruleId":"328","severity":1,"message":"398","line":6,"column":10,"nodeType":"330","messageId":"331","endLine":6,"endColumn":22},{"ruleId":"316","replacedBy":"399"},{"ruleId":"318","replacedBy":"400"},{"ruleId":"316","replacedBy":"401"},{"ruleId":"318","replacedBy":"402"},{"ruleId":"383","severity":1,"message":"384","line":16,"column":21,"nodeType":"324","endLine":16,"endColumn":113},{"ruleId":"316","replacedBy":"403"},{"ruleId":"318","replacedBy":"404"},"no-native-reassign",["405"],"no-negated-in-lhs",["406"],["405"],["406"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Parsing error: Unexpected token\n\n  16 |     message: messageReducer,\n  17 |     refer: \n> 18 | })\n     | ^\n  19 | \n  20 | export default rootReducer",["405"],["406"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar",["405"],["406"],"'Button' is defined but never used.","'Menu' is defined but never used.","'MailIcon' is defined but never used.","'drawerWidth' is assigned a value but never used.","'Sider' is assigned a value but never used.",["405"],["406"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-redeclare","'idcard' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["405"],["406"],"'Radio' is defined but never used.","'Upload' is defined but never used.","'AutoComplete' is defined but never used.","'props' is assigned a value but never used.","'Option' is assigned a value but never used.","'kindID' is assigned a value but never used.",["405"],["406"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["405"],["406"],["405"],["406"],["405"],["406"],["405"],["406"],["405"],["406"],["405"],["406"],"'Select' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["405"],["406"],["405"],["406"],"'LockOutlined' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["405"],["406"],["405"],["406"],"'FormProvider' is defined but never used.",["405"],["406"],["405"],["406"],["405"],["406"],"no-global-assign","no-unsafe-negation"]