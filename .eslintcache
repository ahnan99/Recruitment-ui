[{"F:\\project\\Recruitment-ui\\src\\modules\\store\\index.js":"1","F:\\project\\Recruitment-ui\\src\\modules\\sagas.js":"2","F:\\project\\Recruitment-ui\\src\\routes\\index.js":"3","F:\\project\\Recruitment-ui\\src\\components\\JobCollapse\\JobCollapse.jsx":"4","F:\\project\\Recruitment-ui\\src\\containers\\JobDetail\\JobDetail.jsx":"5","F:\\project\\Recruitment-ui\\src\\containers\\HomePage\\HomePage.jsx":"6","F:\\project\\Recruitment-ui\\src\\modules\\index.js":"7","F:\\project\\Recruitment-ui\\src\\modules\\jobs\\index.js":"8","F:\\project\\Recruitment-ui\\src\\modules\\jobs\\sagas.js":"9","F:\\project\\Recruitment-ui\\src\\containers\\App.js":"10","F:\\project\\Recruitment-ui\\src\\containers\\MainView.jsx":"11","F:\\project\\Recruitment-ui\\src\\components\\LoginForm\\LoginForm.jsx":"12","F:\\project\\Recruitment-ui\\src\\containers\\LoginPage\\LoginPage.jsx":"13","F:\\project\\Recruitment-ui\\src\\modules\\function\\checkID.js":"14","F:\\project\\Recruitment-ui\\src\\components\\RegisterForm\\RegisterForm.jsx":"15","F:\\project\\Recruitment-ui\\src\\containers\\Register\\Register.jsx":"16","F:\\project\\Recruitment-ui\\src\\modules\\application\\index.js":"17","F:\\project\\Recruitment-ui\\src\\modules\\application\\sagas.js":"18"},{"size":478,"mtime":1611274610899,"results":"19","hashOfConfig":"20"},{"size":294,"mtime":1611377783218,"results":"21","hashOfConfig":"20"},{"size":601,"mtime":1611375850439,"results":"22","hashOfConfig":"20"},{"size":2755,"mtime":1611466173270,"results":"23","hashOfConfig":"20"},{"size":5657,"mtime":1611473091244,"results":"24","hashOfConfig":"20"},{"size":1072,"mtime":1611380735751,"results":"25","hashOfConfig":"20"},{"size":255,"mtime":1611377785131,"results":"26","hashOfConfig":"20"},{"size":2967,"mtime":1611380754056,"results":"27","hashOfConfig":"20"},{"size":2249,"mtime":1611380916311,"results":"28","hashOfConfig":"20"},{"size":504,"mtime":1611388171453,"results":"29","hashOfConfig":"20"},{"size":3624,"mtime":1611388081811,"results":"30","hashOfConfig":"20"},{"size":2828,"mtime":1611378774008,"results":"31","hashOfConfig":"20"},{"size":1460,"mtime":1611378530082,"results":"32","hashOfConfig":"20"},{"size":4663,"mtime":1611375655736,"results":"33","hashOfConfig":"20"},{"size":7058,"mtime":1611409558369,"results":"34","hashOfConfig":"20"},{"size":1294,"mtime":1611384471440,"results":"35","hashOfConfig":"20"},{"size":6045,"mtime":1611382796008,"results":"36","hashOfConfig":"20"},{"size":3229,"mtime":1611386858025,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11xsvnn",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\project\\Recruitment-ui\\src\\modules\\store\\index.js",[],"F:\\project\\Recruitment-ui\\src\\modules\\sagas.js",[],"F:\\project\\Recruitment-ui\\src\\routes\\index.js",[],"F:\\project\\Recruitment-ui\\src\\components\\JobCollapse\\JobCollapse.jsx",["76","77"],"F:\\project\\Recruitment-ui\\src\\containers\\JobDetail\\JobDetail.jsx",["78"],"F:\\project\\Recruitment-ui\\src\\containers\\HomePage\\HomePage.jsx",[],"F:\\project\\Recruitment-ui\\src\\modules\\index.js",[],"F:\\project\\Recruitment-ui\\src\\modules\\jobs\\index.js",[],"F:\\project\\Recruitment-ui\\src\\modules\\jobs\\sagas.js",[],"F:\\project\\Recruitment-ui\\src\\containers\\App.js",["79"],"F:\\project\\Recruitment-ui\\src\\containers\\MainView.jsx",["80","81","82","83","84"],"F:\\project\\Recruitment-ui\\src\\components\\LoginForm\\LoginForm.jsx",[],"F:\\project\\Recruitment-ui\\src\\containers\\LoginPage\\LoginPage.jsx",[],"F:\\project\\Recruitment-ui\\src\\modules\\function\\checkID.js",["85","86","87","88","89","90","91","92","93","94","95","96","97"],"export default function checkIDcard(idcard)//校验身份证号码\r\n{\r\n    /*\r\n    1.\"验证通过!\", \r\n    2.\"身份证号码位数不对!\", \r\n    3.\"身份证号码出生日期超出范围或含有非法字符!\", \r\n    4.\"身份证号码校验错误!\", \r\n    5.\"身份证地区非法!\" \r\n    */\r\n    var Errors = new Array(1, 2, 3, 4, 5);\r\n    var area = { 11: \"北京\", 12: \"天津\", 13: \"河北\", 14: \"山西\", 15: \"内蒙古\", 21: \"辽宁\", 22: \"吉林\", 23: \"黑龙江\", 31: \"上海\", 32: \"江苏\", 33: \"浙江\", 34: \"安徽\", 35: \"福建\", 36: \"江西\", 37: \"山东\", 41: \"河南\", 42: \"湖北\", 43: \"湖南\", 44: \"广东\", 45: \"广西\", 46: \"海南\", 50: \"重庆\", 51: \"四川\", 52: \"贵州\", 53: \"云南\", 54: \"西藏\", 61: \"陕西\", 62: \"甘肃\", 63: \"青海\", 64: \"宁夏\", 65: \"新疆\", 71: \"台湾\", 81: \"香港\", 82: \"澳门\", 91: \"国外\" }\r\n    var idcard, Y, JYM;\r\n    var S, M;\r\n    var idcard_array = new Array();\r\n    idcard_array = idcard.split(\"\");\r\n    var ereg;\r\n    //地区检验 \r\n    if (area[parseInt(idcard.substr(0, 2))] == null) return Errors[4];\r\n    //身份号码位数及格式检验 \r\n    switch (idcard.length) {\r\n        case 15:\r\n            if ((parseInt(idcard.substr(6, 2)) + 1900) % 4 == 0 || ((parseInt(idcard.substr(6, 2)) + 1900) % 100 == 0 && (parseInt(idcard.substr(6, 2)) + 1900) % 4 == 0)) {\r\n                ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}$/;//测试出生日期的合法性 \r\n            } else {\r\n                ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}$/;//测试出生日期的合法性 \r\n            }\r\n            if (ereg.test(idcard)) return Errors[0];\r\n            else return Errors[2];\r\n            break;\r\n        case 18:\r\n            //18位身份号码检测 \r\n            //出生日期的合法性检查  \r\n            //闰年月日:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9])) \r\n            //平年月日:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8])) \r\n            if (parseInt(idcard.substr(6, 4)) % 4 == 0 || (parseInt(idcard.substr(6, 4)) % 100 == 0 && parseInt(idcard.substr(6, 4)) % 4 == 0)) {\r\n                //ereg = /^[1-9][0-9]{5}19[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$/;//闰年出生日期的合法性正则表达式 \r\n                ereg = /^[1-9][0-9]{5}[1-9][0-9][0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$/;//闰年出生日期的合法性正则表达式 \r\n            } else {\r\n                //ereg = /^[1-9][0-9]{5}19[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}[0-9Xx]$/;//平年出生日期的合法性正则表达式 \r\n                ereg = /^[1-9][0-9]{5}[1-9][0-9][0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}[0-9Xx]$/;//平年出生日期的合法性正则表达式 \r\n            }\r\n            if (ereg.test(idcard)) {//测试出生日期的合法性 \r\n                //计算校验位 \r\n                S = (parseInt(idcard_array[0]) + parseInt(idcard_array[10])) * 7\r\n                    + (parseInt(idcard_array[1]) + parseInt(idcard_array[11])) * 9\r\n                    + (parseInt(idcard_array[2]) + parseInt(idcard_array[12])) * 10\r\n                    + (parseInt(idcard_array[3]) + parseInt(idcard_array[13])) * 5\r\n                    + (parseInt(idcard_array[4]) + parseInt(idcard_array[14])) * 8\r\n                    + (parseInt(idcard_array[5]) + parseInt(idcard_array[15])) * 4\r\n                    + (parseInt(idcard_array[6]) + parseInt(idcard_array[16])) * 2\r\n                    + parseInt(idcard_array[7]) * 1\r\n                    + parseInt(idcard_array[8]) * 6\r\n                    + parseInt(idcard_array[9]) * 3;\r\n                Y = S % 11;\r\n                M = \"F\";\r\n                JYM = \"10X98765432\";\r\n                M = JYM.substr(Y, 1);//判断校验位 \r\n                if (M == idcard_array[17]) return Errors[0]; //检测ID的校验位 \r\n                else return Errors[3];\r\n            }\r\n            else return Errors[2];\r\n            break;\r\n        default:\r\n            return Errors[1];\r\n            break;\r\n    }\r\n}","F:\\project\\Recruitment-ui\\src\\components\\RegisterForm\\RegisterForm.jsx",["98","99","100","101","102","103"],"import React, { Component } from 'react'\r\nimport { Form, Input, Button, Select, Radio, message, Upload, AutoComplete } from 'antd'\r\nimport checkIDcard from '../../modules/function/checkID'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst props = {\r\n    name: 'avatar',\r\n    headers: {\r\n        authorization: 'authorization-text',\r\n    }\r\n};\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst { Option } = Select\r\nclass RegisterForm extends Component {\r\n    formRef = React.createRef()\r\n    constructor(props) {\r\n        super(props)\r\n        this.checkIDcard = checkIDcard\r\n        this.state = { username: null, password: null }\r\n    }\r\n\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if (this.props.application.registered) {\r\n            message.success('注册成功')\r\n            this.props.actions.requestLogin({ username: this.state.username, password: this.state.password })\r\n            this.props.history.push('/login')\r\n            this.props.actions.resetRegisterStatus()\r\n        } else if (this.props.application.registerError) {\r\n            message.error(this.props.application.registerError)\r\n            this.props.actions.resetRegisterStatus()\r\n        }\r\n    }\r\n\r\n\r\n    onFinish = values => {\r\n        this.props.actions.requestRegister({\r\n            username: values.username,\r\n            name: values.name,\r\n            mobile: values.mobile,\r\n            registerID: values.username,\r\n            fromID: this.props.jobs.fromID ? this.props.jobs.fromID : '',\r\n            password: values.password\r\n        })\r\n        console.log('Success:', values)\r\n        this.setState({\r\n            username: values.username,\r\n            password: values.password\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { kindID } = this.state\r\n        return (\r\n            <Form\r\n                {...formItemLayout}\r\n                onFinish={this.onFinish}\r\n                scrollToFirstError\r\n                initialValues={{ kindID: \"0\" }}\r\n                onValuesChange={this.onValuesChange}\r\n                ref={this.formRef}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    label=\"身份证\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入身份证号',\r\n                        },\r\n                        {\r\n                            validator: (rule, value) => {\r\n                                console.log(this.checkIDcard(value))\r\n                                if (!value || this.checkIDcard(value) === 1) {\r\n                                    return Promise.resolve();\r\n                                } else if (this.checkIDcard(value) === 2) {\r\n                                    return Promise.reject('身份证号码位数不对');\r\n                                } else if (this.checkIDcard(value) === 3) {\r\n                                    return Promise.reject('身份证号码出生日期超出范围或含有非法字符');\r\n                                } else if (this.checkIDcard(value) === 4) {\r\n                                    return Promise.reject('身份证号码校验错误');\r\n                                } else if (this.checkIDcard(value) === 5) {\r\n                                    return Promise.reject('身份证地区非法');\r\n                                } else\r\n                                    return Promise.reject('身份证号码校验错误');\r\n                            },\r\n                        }\r\n\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"name\"\r\n                    label=\"姓名\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入姓名',\r\n                        },\r\n\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    label=\"密码\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入密码',\r\n                        },\r\n                        {\r\n                            min: 6,\r\n                            message: '密码至少六位'\r\n                        }\r\n                    ]}\r\n                    hasFeedback\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"confirm\"\r\n                    label=\"确认密码\"\r\n                    dependencies={['password']}\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请确认密码',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                            validator(rule, value) {\r\n                                if (!value || getFieldValue('password') === value) {\r\n                                    return Promise.resolve();\r\n                                }\r\n                                return Promise.reject('两次输入不匹配');\r\n                            },\r\n                        }),\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"mobile\"\r\n                    label=\"手机号码\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入手机号码',\r\n                        },\r\n                        {\r\n                            validator: (rule, value) => {\r\n                                console.log(this.checkIDcard(value))\r\n                                if (!value || value.length === 11) {\r\n                                    return Promise.resolve();\r\n                                } else {\r\n                                    return Promise.reject('手机号不合法')\r\n                                }\r\n                            },\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">注册</Button>\r\n                    <span> </span>\r\n                    <span> </span>\r\n                    <a href=\"/login\">取消</a>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        )\r\n    }\r\n}\r\nexport default withRouter(RegisterForm)","F:\\project\\Recruitment-ui\\src\\containers\\Register\\Register.jsx",[],"F:\\project\\Recruitment-ui\\src\\modules\\application\\index.js",["104"],"F:\\project\\Recruitment-ui\\src\\modules\\application\\sagas.js",[],{"ruleId":"105","severity":1,"message":"106","line":34,"column":17,"nodeType":"107","endLine":34,"endColumn":105},{"ruleId":"108","severity":1,"message":"109","line":41,"column":36,"nodeType":"107","endLine":41,"endColumn":64},{"ruleId":"108","severity":1,"message":"109","line":95,"column":46,"nodeType":"107","endLine":95,"endColumn":49},{"ruleId":"110","severity":1,"message":"111","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":15},{"ruleId":"110","severity":1,"message":"114","line":11,"column":5,"nodeType":"112","messageId":"113","endLine":11,"endColumn":18},{"ruleId":"110","severity":1,"message":"115","line":12,"column":5,"nodeType":"112","messageId":"113","endLine":12,"endColumn":27},{"ruleId":"110","severity":1,"message":"116","line":14,"column":5,"nodeType":"112","messageId":"113","endLine":14,"endColumn":17},{"ruleId":"110","severity":1,"message":"117","line":16,"column":5,"nodeType":"112","messageId":"113","endLine":16,"endColumn":17},{"ruleId":"110","severity":1,"message":"118","line":18,"column":5,"nodeType":"112","messageId":"113","endLine":18,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":10,"column":18,"nodeType":"121","messageId":"122","endLine":10,"endColumn":42},{"ruleId":"123","severity":1,"message":"124","line":12,"column":9,"nodeType":"112","messageId":"125","endLine":12,"endColumn":15},{"ruleId":"119","severity":1,"message":"120","line":14,"column":24,"nodeType":"121","messageId":"122","endLine":14,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":22,"column":60,"nodeType":"128","messageId":"129","endLine":22,"endColumn":62},{"ruleId":"126","severity":1,"message":"127","line":22,"column":114,"nodeType":"128","messageId":"129","endLine":22,"endColumn":116},{"ruleId":"126","severity":1,"message":"127","line":22,"column":165,"nodeType":"128","messageId":"129","endLine":22,"endColumn":167},{"ruleId":"130","severity":1,"message":"131","line":29,"column":13,"nodeType":"132","messageId":"133","endLine":29,"endColumn":19},{"ruleId":"126","severity":1,"message":"127","line":35,"column":51,"nodeType":"128","messageId":"129","endLine":35,"endColumn":53},{"ruleId":"126","severity":1,"message":"127","line":35,"column":96,"nodeType":"128","messageId":"129","endLine":35,"endColumn":98},{"ruleId":"126","severity":1,"message":"127","line":35,"column":138,"nodeType":"128","messageId":"129","endLine":35,"endColumn":140},{"ruleId":"126","severity":1,"message":"127","line":58,"column":23,"nodeType":"128","messageId":"129","endLine":58,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":62,"column":13,"nodeType":"132","messageId":"133","endLine":62,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":65,"column":13,"nodeType":"132","messageId":"133","endLine":65,"endColumn":19},{"ruleId":"110","severity":1,"message":"134","line":2,"column":39,"nodeType":"112","messageId":"113","endLine":2,"endColumn":44},{"ruleId":"110","severity":1,"message":"135","line":2,"column":55,"nodeType":"112","messageId":"113","endLine":2,"endColumn":61},{"ruleId":"110","severity":1,"message":"136","line":2,"column":63,"nodeType":"112","messageId":"113","endLine":2,"endColumn":75},{"ruleId":"110","severity":1,"message":"137","line":7,"column":7,"nodeType":"112","messageId":"113","endLine":7,"endColumn":12},{"ruleId":"110","severity":1,"message":"138","line":32,"column":9,"nodeType":"112","messageId":"113","endLine":32,"endColumn":15},{"ruleId":"110","severity":1,"message":"139","line":74,"column":17,"nodeType":"112","messageId":"113","endLine":74,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":235,"column":9,"nodeType":"142","messageId":"143","endLine":244,"endColumn":10},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'AuditOutlined' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'ScheduleOutlined' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-redeclare","'idcard' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Radio' is defined but never used.","'Upload' is defined but never used.","'AutoComplete' is defined but never used.","'props' is assigned a value but never used.","'Option' is assigned a value but never used.","'kindID' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case"]